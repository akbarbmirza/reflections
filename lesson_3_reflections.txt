Q: When would you want to use a remote repository rather than keeping all your
work local?

A: I would want to use a remote repository when I'd like to easily share my work
with some of my collaborators, or even make my work public (open-source or what
have you). Furthermore, remote repositories would also be a great solution to
keep my work backed up. If my local machine bursts into flames and I lose my
files, I can always just get it by cloning my GitHub repository.

Q: Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

A: You would want to pull changes manually, because you want to push changes
manually. If you haven't pushed your new changes from the local repo to the
remote, then that would cause a problem. If Git automatically kept you 
up-to-date, then you would lose any changes that hadn't been pushed to the
remote yet. This way you can also keep track of what changed properly.

Q: Describe the differences between forks, clones, and branches. When would you
use one instead of another?

A: A branch is the marker that is tied with your commits. When you do git log on
your local repository, you'll see the commits on the master branch. A clone is a
copy of a branch. A clone can be done locally or through a remote if you have
permission to clone a repo. Forks are when you make a clone of someone else's
repo on GitHub in your GitHub profile. The Fork stores some data about the repo
it was originally forked from. Any changes made on the fork won't change the
repo that has been forked. Usually, you'll make a fork if you don't have
permission to make changes to someone's repo.

Q: What is the benefit of having a copy of the last known state of the remote
stored locally?

A: One of the benefits of having a copy of the last known state of the remote
stored locally would be that git would be able to place your commit in the right
place when you use git pull or git merge. If you didn't have a copy of the last
known state of the remote stored locally, you wouldn't be able to tell how many
states ahead or behind you are from the origin/master branch when you run git
status.